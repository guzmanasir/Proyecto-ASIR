/**
 * Created by guzman on 4/02/17.
 */

/**
 * Core librer√≠a
 */
angular.module("proyecto", [
    'ui.router',
    'ngMaterial',
    'satellizer',
    'youtube-embed',
    'ngLodash',
    'ngYoutubeEmbed',
    'ui.bootstrap',
    'tangcloud',
    'ngMessages'
]).config(function($mdThemingProvider) {
    $mdThemingProvider.theme('default')
        .primaryPalette('grey')
        .accentPalette('blue')
        .backgroundPalette('grey');
});
/**
 * Created by guzman on 4/02/17.
 */



(function() {
    function routes($stateProvider,$locationProvider,$authProvider,$urlRouterProvider){
        $locationProvider.html5Mode(true);
        $authProvider.loginUrl = '/loginForm';
        $authProvider.tokenName = 'token';
        $authProvider.tokenPrefix = 'miApp';
        $authProvider.tokenHeader = 'token';

        $stateProvider

            .state('home',{
                abstract: true,
                templateUrl: '/frameNoAuth'
            })

            .state('home.login',{
                url: "/",
                controller: 'loginCtrl',
                controllerAs: 'lc',
                templateUrl: '/login',
                params: {redireccion : true}
            })

            .state('home.registro',{
                url: "/signup",
                controller: 'registroCtrl',
                controllerAs: 'rc',
                templateUrl: '/registro'
            })

            .state('main',{
                abstract: true,
                controller: 'frameCtrl',
                controllerAs: 'fc',
                templateUrl: '/users/frame',
                resolve : {
                    tags: ['$http',function($http){
                        return $http.get('/users/getTags')
                            .then(function(response){
                                //console.log("query tags")
                                return response;
                            },function(response) {
                                //console.log("error query tags")
                                return response;
                            })
                    }],
                    infoUsuario: ['$http',function($http){
                        return $http.get('/users/infoUsuario')
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }]
                }
            })

            .state('main.home',{
                url: "/home",
                controller: 'homeCtrl',
                controllerAs: 'hct',
                templateUrl: '/users/tempHome',
                params: {requireLogin : true},
                resolve : {
                    nuevosHome: ['$http',function($http){
                        return $http.get('/users/newLists')
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }],
                    popularesHome: ['$http',function($http){
                        return $http.get('/users/populares')
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }],
                    masEscuchada: ['$http',function($http){
                        return $http.get('/users/masEscuchada')
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }]
                }
            })


            .state('main.nuevos',{
                url: "/nuevos",
                controller: 'nuevosCtrl',
                controllerAs: 'nct',
                templateUrl: '/users/tempNuevos',
                params: {requireLogin : true, pagina:1},
                resolve : {

                    nuevos: ['$http','$stateParams',function($http,$stateParams){
                        console.log("entrando en main.nuevos"+$stateParams.pagina)
                        return $http.get('/users/newLists/'+$stateParams.pagina)
                            .then(function(response){
                               // //console.log("er param", $state)
                                return response;
                            },function(response) {
                                return response;
                            })
                    }],
                    tags: ['$http',function($http){
                        return $http.get('/users/getTags')
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }]
                }
            })

            .state('main.populares',{
                url: "/populares",
                controller: 'popularesCtrl',
                controllerAs: 'pct',
                templateUrl: '/users/tempPopulares',
                params: {requireLogin : true},
                resolve : {
                    listas: ['$http',function($http){
                        return $http.get('/users/populares')
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }]
                }
            })

            .state('main.perfilUsuario',{
                url: "/perfilUsuario?idUser",
                controller: 'perfilUsuarioCtrl',
                controllerAs: 'puct',
                templateUrl: '/users/tempPerfilUsuario',
                params: {requireLogin : true, pagina: 1, pagina2: 1, tab: 1},
                resolve : {
                    listas: ['$http','$stateParams','$state',function($http,$stateParams,$state){
                        return $http.get('/users/perfilUsuario/'+$stateParams.idUser+"/"+$stateParams.pagina)
                            .then(function(response){
                                console.log("response ok ",response)
                                return response;
                            },function(response) {
                                console.error("error en response ",response)

                                return response;
                            })
                    }],
                    favoritos: ['$http','$stateParams',function($http, $stateParams){
                        return $http.get('/users/otrosFavoritos/'+$stateParams.idUser+"/"+$stateParams.pagina2)
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }]
                }
            })

            .state('main.recomendaciones',{
                url: "/recomendaciones",
                controller: 'recomendacionesCtrl',
                controllerAs: 'rct',
                templateUrl: '/users/tempRecomendaciones',
                params: {requireLogin : true},
                resolve : {
                    recomendadas: ['$http',function($http){
                        return $http.get('/users/recomendacionesQuery')
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }]
                }
            })

            .state('main.perfil',{
                url: "/perfil",
                controller: 'mislistasCtrl',
                controllerAs: 'mlc',
                templateUrl: '/users/tempMisListas',
                params: {requireLogin : true, pagina: 1, pagina2: 1, tab:1},
                resolve : {
                    listas: ['$http','$stateParams', function($http,$stateParams){
                        return $http.get('/users/getLists/'+$stateParams.pagina)
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }],
                    favoritos: ['$http','$stateParams',function($http, $stateParams){
                        return $http.get('/users/misFavoritos/'+$stateParams.pagina2)
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }]

                }
            })

            // .state('main.favoritos',{
            //     url: "/favoritos",
            //     controller: 'favoritosCtrl',
            //     controllerAs: 'flc',
            //     templateUrl: '/users/tempFavoritos',
            //     params: {requireLogin : true},
            //     resolve : {
            //         listas: ['$http',function($http){
            //             return $http.get('/users/misFavoritos')
            //                 .then(function(response){
            //                     return response;
            //                 },function(response) {
            //                     return response;
            //                 })
            //         }]
            //     }
            // })

            .state('main.buscador',{
                url: "/buscar",
                controller: 'buscadorCtrl',
                controllerAs: 'blc',
                templateUrl: '/users/tempBuscador',
                params: {requireLogin : true, resultado: null}
            })



            .state('main.editList',{
                url: "/perfil/edit",
                controller: 'editListCtrl',
                controllerAs: 'elc',
                templateUrl: '/users/tempEditList',
                params: {requireLogin : true, lista: null}
            })

            .state('main.editInfo',{
                url: "/perfil/editInfo",
                controller: 'editInfoCtrl',
                controllerAs: 'eict',
                templateUrl: '/users/tempEditInfo',
                params: {requireLogin : true, datos: null}
            })

            .state('main.verLista',{
                url: "/nuevos/lista",
                controller: 'verlistaCtrl',
                controllerAs: 'vlc',
                templateUrl: '/users/tempVerLista',
                params: {requireLogin : true, lista: null}
            })

            .state('main.logout',{
                url: "/logout",
                controller: 'logoutCtrl',
                controllerAs: 'lgc',
                template: '<p>Logout</p>'
            })

            .state('403',{
                url: "/403",
                templateUrl: '/403'
            })

            .state('404',{
                url: "/404",
                template: '<p>404</p>'
            })

        $urlRouterProvider.otherwise('/perfil')



    }

    angular.module('proyecto')
        .config(['$stateProvider', '$locationProvider', '$authProvider', '$urlRouterProvider', routes]);

})();


/**
 * Created by jesus on 18/05/17.
 */
(function() {
    function run($rootScope,$state,$auth){

        $rootScope.$on('Loginfail',function(datos){
            $state.go('403')
        })

        $rootScope.$on('$stateChangeStart',
            function(event, toState, toParams, fromState, fromParams, options){
                $rootScope.estadoActual = toState.name
                //console.log("cambiando de estado",toState.params.redireccion )
                if ( toState.params && toState.params.redireccion && $auth.isAuthenticated() ) {
                    event.preventDefault();
                    //console.log("entrando redireccion")
                    $state.go('main.home');
                }
                if ( toState.params && toState.params.requireLogin && !$auth.isAuthenticated() ) {
                    event.preventDefault();
                    $state.go('403');
                }

                // transitionTo() promise will be rejected with
                // a 'transition prevented' error
            })
        $rootScope.$on('$stateChangeError',
            function(event, toState, toParams, fromState, fromParams, options){
                    event.preventDefault();
                    $state.go('404');

            })


    }

    angular.module('proyecto')
        .run(['$rootScope','$state', '$auth', run]);

})();

/**
 * Created by jesus on 5/06/17.
 */
(function() {
    function buscadorCtrl($http,$auth,$state,$rootScope, $stateParams){
        //console.log("entreo")
        var vm = this;
        vm.listas = $stateParams.resultado
        vm.vacio =  (!$stateParams.resultado) ? "No hay ningun resultado" : ""
        //console.log("mi busqueda premoh", $stateParams.resultado)

        //     vm.play = function(lista){
        //         //$rootScope.playlist = lista
        //         $rootScope.$broadcast('playlist',lista);
        //
        //     }
        //
        // vm.play = function(lista){
        //     //$rootScope.playlist = lista
        //     $rootScope.$broadcast('playlist',lista);
        // }



    }


    angular.module('proyecto')
        .controller('buscadorCtrl',['$http','$auth','$state', '$rootScope','$stateParams', buscadorCtrl]);

})();

/**
 * Created by jesus on 19/06/17.
 */
(function() {
    function editInfoCtrl($http,$auth,$state,$rootScope, lodash, $stateParams, $mdToast){
        //console.log("stateparams ",$stateParams.datos)
        if(!$stateParams.datos)
            $state.go('main.perfil')
        var vm = this;

        var last = {
            bottom: false,
            top: true,
            left: false,
            right: true
        };

        vm.toastPosition = angular.extend({},last);

        vm.getToastPosition = function() {
            sanitizePosition();

            return Object.keys(vm.toastPosition)
                .filter(function(pos) { return vm.toastPosition[pos]; })
                .join(' ');
        };

        function sanitizePosition() {
            var current = vm.toastPosition;

            if ( current.bottom && last.top ) current.top = false;
            if ( current.top && last.bottom ) current.bottom = false;
            if ( current.right && last.left ) current.left = false;
            if ( current.left && last.right ) current.right = false;

            last = angular.extend({},current);
        }

        vm.toastInfo = function(nombre) {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Tus nuevos datos se han guardado')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };

        vm.editInfo = $stateParams.datos
        //console.log("los datos", vm.editInfo)

        vm.editarInfo = function(){

            $http.post('/users/editarInfo', vm.editInfo)
                .then(function(responseOk){
                    //console.log(responseOk)

                    $state.go('main.perfil')
                    vm.toastInfo()
                }, function(responseFail){
                    //console.log(responseFail)
                })
        }

        vm.cancelar = function() {
            $state.go('main.perfil')
        }


    }

    angular.module('proyecto')
        .controller('editInfoCtrl',['$http','$auth','$state', '$rootScope','lodash','$stateParams', '$mdToast', editInfoCtrl]);

})();
/**
 * Created by jesus on 30/05/17.
 */
(function() {
    function editListCtrl($http,$auth,$state,$rootScope, $stateParams, $mdDialog, $mdToast, lodash){
        if(lodash.isNull($stateParams.lista)) return $state.go("main.perfil")
        //console.log("entreo aqui")
        var vm = this;
        vm.editList = $stateParams.lista
        vm.firstPosition = vm.editList.info.length
        //console.log("primera posicion", vm.firstPosition)
        //console.log("toda ls lista", $stateParams.lista)
        var last = {
            bottom: false,
            top: true,
            left: false,
            right: true
        };

        vm.toastPosition = angular.extend({},last);

        vm.getToastPosition = function() {
            sanitizePosition();

            return Object.keys(vm.toastPosition)
                .filter(function(pos) { return vm.toastPosition[pos]; })
                .join(' ');
        };

        function sanitizePosition() {
            var current = vm.toastPosition;

            if ( current.bottom && last.top ) current.top = false;
            if ( current.top && last.bottom ) current.bottom = false;
            if ( current.right && last.left ) current.left = false;
            if ( current.left && last.right ) current.right = false;

            last = angular.extend({},current);
        }

        vm.toastEliminarCanciones = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Canciones eliminadas')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };

        vm.toastEditarCanciones = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Cancion editada')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };

        vm.toastMeterCanciones = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Canciones a√±adidas')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };


        vm.eliminar = function(){
            vm.seleccionados = lodash.map(lodash.filter(vm.editList.info,function(o){return o.seleccionado == true}),'idenlace')
            lodash.remove(vm.editList.info, function(currentObject) {
                return currentObject.seleccionado === true;
            });
            //console.log(vm.seleccionados)

            var edit = {idurls: vm.seleccionados, idlista: vm.editList.listaid}

            //console.log("json", edit)

            $http.post('/users/editList', edit)
                .then(function(responseOk){
                    //console.log(responseOk)
                    vm.toastEliminarCanciones()
                },
                function(responseFail){
                    //console.log(responseFail)
                })
        }

        vm.addNew = function(ev){
            $mdDialog.show({
                controller: function($mdDialog){
                    var vmd = this;
                    vmd.urls = [];
                    vmd.page = "";
                    vmd.pagePrev = "";
                    vmd.pageNext = "";
                    vmd.artista = "";
                    vmd.cancion = "";

                    vmd.answer = function(){
                        vm.name = vmd.nombre;

                        $mdDialog.hide();
                    }

                    vmd.close = function() {
                        vm.editList.info = vm.editList.info.slice(0,vm.firstPosition)
                        vmd.urls = []
                        //console.log("borrando",vm.firstPosition)
                        $mdDialog.hide();
                    }

                    vmd.addUrl = function(obj) {

                        vmd.urls.push({
                            thumbnail: obj.snippet.thumbnails.default.url ,
                            url: "https://www.youtube.com/watch?v="+obj.id.videoId,
                            artista: obj.snippet.title.split("-")[0],
                            cancion: _.isUndefined(obj.snippet.title.split("-")[1]) ? "unknown" : obj.snippet.title.split("-")[1]
                        })
                        //console.log(vmd.urls)
                        vm.editList.info.push({
                            thumbnail: obj.snippet.thumbnails.default.url ,
                            url: "https://www.youtube.com/watch?v="+obj.id.videoId,
                            artista: obj.snippet.title.split("-")[0],
                            cancion: _.isUndefined(obj.snippet.title.split("-")[1]) ? "unknown" : obj.snippet.title.split("-")[1]
                        })
                    }

                    vmd.searchUrl = function(value , index) {

                        if(index === 0){
                            vmd.page = vmd.pagePrev;
                            //console.log("Vale", vmd.page)
                        } else if (index === 1) {
                            vmd.page = vmd.pageNext;
                            //console.log("Vale2", vmd.page)
                        } else {
                            vmd.page = ""
                        }

                        var key = 'AIzaSyBX1ayzZTlapJWNuhSYZRlkSUhU-NlOrCA'
                        var url = 'https://content.googleapis.com/youtube/v3/search?' +
                            '&key='+key+'&part=snippet&maxResults=3' +
                            '&q='+value+'&type=video' +
                            '&videoEmbeddable=true&videoSyndicated=true&pageToken='+vmd.page


                        //console.log("primer then")
                        $http.get(url).then(function (data) {

                            if(!data.data.prevPageToken){
                                vmd.pageNext = data.data.nextPageToken
                                vmd.firstPage = true
                                //console.log("si no prev(primera)" )
                            } else {
                                //vmd.page = (index == 0) ? data.data.prevPageToken : data.data.nextPageToken;
                                if(!data.data.prevPageToken){
                                    vmd.pageNext = data.data.nextPageTokenS

                                } else {
                                    vmd.pageNext = data.data.nextPageToken
                                    vmd.pagePrev = data.data.prevPageToken

                                }
                                //console.log("si hay prev")
                                //console.log(vmd.page)
                                vmd.firstPage = false
                            }
                            vmd.videoIds = data.data.items
                            data = {}
                            console.info('videos from search by query', data);
                        },function(err){
                            console.error(err.data)
                        });

                    }

                    vm.urls = vmd.urls;
                },
                controllerAs: "eld",
                templateUrl: '/users/addSongDialog',
                parent: angular.element(document.body),
                targetEvent: ev,
                autoWrap: false,
                bindToController: true
            })
                .then(function() {

                    var dataList = {
                        urlsServer: vm.urls,
                        idlista: vm.editList.listaid
                    }
                    if(dataList.urlsServer.length >=1) {
                        $http.post('/users/addSongs', dataList)
                            .then(function(responseOk){
                                //console.log(responseOk)
                                vm.toastMeterCanciones()
                            },function(responseFail){
                                console.error(responseFail);
                            })
                    }

                }, function() {
                    //console.log("asdal");
                });
        }

        vm.songEdit = function(idenlace, idlista, index, ev){
            $mdDialog.show({
                controller: function($mdDialog){
                    var vme = this;
                    vme.nuevoArtista = ""
                    vme.nuevaCancion = ""
                    //console.log("er index", index)
                    //console.log("los ids", idenlace, idlista)
                    vme.artista = vm.editList.info[index].artista
                    vme.cancion = vm.editList.info[index].cancion
                    vme.save = function() {
                        vm.nuevoArtista = vme.artista
                        vm.nuevaCancion = vme.cancion
                        vm.idenlace = idenlace
                        vm.idlista = idlista

                        vm.editList.info[index].artista = vm.nuevoArtista
                        vm.editList.info[index].cancion = vm.nuevaCancion

                        $mdDialog.hide();
                    }

                    vme.close = function() {
                        $mdDialog.hide();
                    }
                    // vm.nuevoArtista = vme.nuevoArtista
                    // vm.nuevaCancion = vme.nuevaCancion
                    // vm.idenlace = vme.idenlace
                    // vm.idlista = vme.idlista
                },
                controllerAs: "sec",
                templateUrl: '/users/songEditDialog',
                parent: angular.element(document.body),
                targetEvent: ev,
                autoWrap: false,
                bindToController: true
            })

                .then(function(){
                    var dataEditSong = {
                        nuevoArtista : vm.nuevoArtista,
                        nuevaCancion : vm.nuevaCancion,
                        idenlace : vm.idenlace,
                        idlista : vm.idlista
                    }
                    //console.log("datos pa edita", dataEditSong)
                    $http.post('/users/songEdit', dataEditSong)
                        .then(function(responseOk){
                            //console.log(responseOk)
                            vm.toastEditarCanciones()
                        }, function(responseFail){
                            //console.log(responseFail)
                        })
                })
        }



    }

    angular.module('proyecto')
        .controller('editListCtrl',['$http','$auth','$state', '$rootScope','$stateParams', '$mdDialog','$mdToast', 'lodash', editListCtrl]);

})();

/**
 * Created by jesus on 3/06/17.
 */
(function() {
    function favoritosCtrl($http,$auth,$state,$rootScope, listas){
        //console.log("entreo")
         var vm = this;
         vm.listas = listas.data.data.listas;
         //console.log(listas)

    //     vm.play = function(lista){
    //         //$rootScope.playlist = lista
    //         $rootScope.$broadcast('playlist',lista);
    //
    //     }
    //
        vm.play = function(lista){
            //$rootScope.playlist = lista
            $rootScope.$broadcast('playlist',lista);
     }



    }


    angular.module('proyecto')
        .controller('favoritosCtrl',['$http','$auth','$state', '$rootScope','listas', favoritosCtrl]);

})();

/**
 * Created by guzman on 4/02/17.
 */



(function() {
    function frameCtrl($http,$state,$auth, $mdDialog, $mdToast, lodash, tags , $rootScope, $scope, infoUsuario ) {
        var vm = this;
        vm.name = ""
        vm.infoUsuario = infoUsuario
        console.log("INFO USUARIO",vm.infoUsuario)
        $rootScope.infoUsuario = vm.infoUsuario.data.data

        var last = {
            bottom: false,
            top: true,
            left: false,
            right: true
        };

        vm.toastPosition = angular.extend({},last);

        vm.getToastPosition = function() {
            sanitizePosition();

            return Object.keys(vm.toastPosition)
                .filter(function(pos) { return vm.toastPosition[pos]; })
                .join(' ');
        };

        function sanitizePosition() {
            var current = vm.toastPosition;

            if ( current.bottom && last.top ) current.top = false;
            if ( current.top && last.bottom ) current.bottom = false;
            if ( current.right && last.left ) current.left = false;
            if ( current.left && last.right ) current.right = false;

            last = angular.extend({},current);
        }

        vm.toastAddList = function(nombre) {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Has a√±adido la lista "' + nombre + '" con √©xito')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };


        //console.log("tags", tagCloud.data.data)
        //console.log("words", vm.words)
        vm.showAdvanced = function (ev) {
            $mdDialog.show({
                controller: function ($mdDialog) {
                    var vmd = this;
                    vmd.allTags = tags.data.data
                    vmd.urls = [];
                    vmd.tagsSelected = [];
                    vmd.page = "";
                    vmd.pagePrev = "";
                    vmd.pageNext = "";
                    vmd.artista = "";
                    vmd.cancion = "";



                    vmd.createFilterFor = function (query) {

                        var lowercaseQuery = angular.lowercase(query);
                        //console.log("lower", lowercaseQuery)

                        return function filterFn(contact) {
                            ////console.log("tagsSelected ",tagsSelected)
                            return (contact.nombre.indexOf(lowercaseQuery) !== -1);
                        };

                    }


                    vmd.filter = function (criteria) {
                        //console.log(criteria)
                        //return criteria ? vmd.allTags.filter(createFilterFor(criteria)) : [];
                        return criteria ? vmd.allTags.filter(vmd.createFilterFor(criteria)) : [];

                    }


                    vmd.answer = function () {
                        vm.compru = true
                        vm.name = vmd.nombre;
                        $mdDialog.hide();
                    }

                    vmd.close = function () {
                        vm.compru = false
                        $mdDialog.hide();
                    }

                    vmd.addUrl = function (obj) {
                        var aux = {
                            thumbnail: obj.snippet.thumbnails.default.url,
                            url: "https://www.youtube.com/watch?v=" + obj.id.videoId,
                            artista: obj.snippet.title.split("-")[0],
                            cancion: _.isUndefined(obj.snippet.title.split("-")[1]) ? "unknown" : obj.snippet.title.split("-")[1]
                        }

                        var check = false
                        lodash.forEach(vm.urls,function(o){ if(lodash.isEqual(aux,o)) check=true })
                        if(!check)
                            vmd.urls.push(aux)
                        //console.log(vmd.urls)
                    }


                    vmd.editSong = function (index) {
                        $mdDialog.show({
                            controller: function () {
                                var vme = this;
                                vme.artista = vmd.urls[index].artista
                                vme.cancion = vmd.urls[index].cancion
                                vme.save = function () {
                                    vmd.urls[index].artista = vme.artista
                                    vmd.urls[index].cancion = vme.cancion
                                    $mdDialog.hide();
                                }

                                vme.close = function () {
                                    $mdDialog.hide();
                                }
                            },
                            multiple: true,
                            controllerAs: "mc",
                            templateUrl: '/users/editSongDialog.jade',
                            preserveScope: true,
                            skipHide: true

                        })

                    }


                    vmd.searchUrl = function (value, index) {

                        if (index === 0) {
                            vmd.page = vmd.pagePrev;
                            //console.log("Vale", vmd.page)
                        } else if (index === 1) {
                            vmd.page = vmd.pageNext;
                            //console.log("Vale2", vmd.page)
                        } else {
                            vmd.page = ""
                        }

                        var key = 'AIzaSyBX1ayzZTlapJWNuhSYZRlkSUhU-NlOrCA'
                        var url = 'https://content.googleapis.com/youtube/v3/search?' +
                            '&key=' + key + '&part=snippet&maxResults=3' +
                            '&q=' + value + '&type=video' +
                            '&videoEmbeddable=true&videoSyndicated=true&pageToken=' + vmd.page


                        //console.log("primer then")
                        $http.get(url).then(function (data) {

                            if (!data.data.prevPageToken) {
                                vmd.pageNext = data.data.nextPageToken
                                vmd.firstPage = true
                                //console.log("si no prev(primera)")
                            } else {
                                //vmd.page = (index == 0) ? data.data.prevPageToken : data.data.nextPageToken;
                                if (!data.data.prevPageToken) {
                                    vmd.pageNext = data.data.nextPageTokenS

                                } else {
                                    vmd.pageNext = data.data.nextPageToken
                                    vmd.pagePrev = data.data.prevPageToken

                                }
                                //console.log("si hay prev")
                                //console.log(vmd.page)
                                vmd.firstPage = false
                            }
                            vmd.videoIds = data.data.items
                            data = {}
                            console.info('videos from search by query', data);
                        }, function (err) {
                            console.error(err.data)
                        });

                    }
                    vm.close = function() {
                        $mdDialog.hide();
                    }

                    vm.urls = vmd.urls;
                    vm.tags = vmd.tagsSelected
                    //vm.tags = lodash.map(vmd.tagsSelected, "idetiquetas")

                },
                controllerAs: "mc",
                templateUrl: '/users/addListDialog',
                parent: angular.element(document.body),
                targetEvent: ev,
                autoWrap: false,
                bindToController: true
                // clickOutsideToClose:true
            })
                .then(function () {
                    var dataList = {
                        nombreServer: vm.name,
                        tagsServer: vm.tags,
                        urlsServer: vm.urls
                    }
                    console.log("entro aqui 2", dataList)

                    //console.log(dataList.tagsServer)
                    if (dataList.nombreServer != "" && dataList.tagsServer.length >= 1 && dataList.urlsServer.length >= 1) {
                        $http.post('/users/addList', dataList)
                            .then(function (responseOk) {

                                vm.close()
                                vm.toastAddList(dataList.nombreServer)
                                //console.log(responseOk)
                            }, function (responseFail) {
                                console.error(responseFail);
                            })
                    } else if (vm.compru) {
                        //console.log("el compru", vm.compru)
                        console.log("entro",vm.compru)
                        swal(
                            'Oops...',
                            'Error al registrar la lista. Rellene el campo de nombre, a√±ada etiqueta y enlaces!',
                            'error'
                        )
                    }

                }, function () {
                    console.log("entro aqui")
                    //console.log("asdal");
                });
        };
        vm.playerVars = {autoplay: 1}
        vm.player = ""
        vm.idVideo="null"
        vm.youtube=false;
        vm.abrirBusqueda = false;
        vm.reproduciendo = ""
        vm.actualNavItem=$rootScope.estadoActual
        //console.log("la tab", vm.actualNavItem)

        //vm.index = 0
        $scope.$on('youtube.player.ready', function (event, player) {
            //console.log("el reproductor esta listo");
            vm.player = player
        })
        $scope.$on('playlist', function (event, lista) {

            vm.playlist = lista;
            //vm.reproduciendo = lista[vm.index].artista + "-" + lista[vm.index].cancion

            vm.idVideos = lodash.map(vm.playlist, function(o){
                return o.url.split("=")[1]
            })
            //console.log("idvideos",vm.idVideos)
            // vm.idVideos = vm.playlist[0].url.split("=")[1]
            vm.youtube=true;
            vm.player.loadPlaylist({playlist: vm.idVideos})
            //vm.index = vm.player.getPlaylistIndex()



        })

        $scope.$on('youtube.player.playing', function(event, player){
                //vm.index = player.getPlaylistIndex()
            vm.artista = vm.playlist[player.getPlaylistIndex()].artista.trim()
            vm.cancion = vm.playlist[player.getPlaylistIndex()].cancion.trim()
            var url = "/users/lyrics?artista="+vm.artista+"&cancion="+vm.cancion
            $http.get(url)
                .then(function(responseOk){
                    console.log("letraok", responseOk)
                    vm.letra = (!responseOk.data.data) ? "No hay letra para esta cancion" : responseOk.data.data
                },function(responseFail){
                    console.log("letrafail")
                    vm.letra = "No hay letra para esta cancion"
                })

            vm.reproduciendo = vm.artista + " - " + vm.cancion


        })

        // vm.buscar = function(){
        //     //console.log("%"+vm.busqueda+"%")
        //
        //     var buscador = {tipo: vm.type, busqueda: "%"+vm.busqueda+"%" }
        //
        //      $http.post('/users/search/', buscador)
        //          .then(function(responseOk){
        //              //console.log("datos brutos", responseOk)
        //              //console.log("datos busqueda", responseOk.data.data.listas)
        //              $state.go('main.buscador', {resultado: responseOk.data.data.listas})
        //
        //          }, function(responseFail){
        //              //console.log("emptyyyy query", responseFail)
        //          })
        // }

        vm.cambiarNav = function(){
            $state.go('main.nuevos', {pagina: 1})
        }

        vm.abrirBuscar = function(){
            vm.abrirBusqueda = true;
        }
        vm.cerrarBuscar = function(){
            vm.abrirBusqueda = false;
            vm.busqueda = "";
        }
    }

    angular.module('proyecto')
        .controller('frameCtrl', ['$http', '$state', '$auth', '$mdDialog', '$mdToast', 'lodash', 'tags', '$rootScope', '$scope', 'infoUsuario', frameCtrl]);

})();
/**
 * Created by jesus on 15/06/17.
 */
(function() {
    function homeCtrl($http,$auth,$state,$rootScope,lodash,$mdToast, nuevosHome, popularesHome, masEscuchada){
        //console.log("entro home")
        var vm = this;

        vm.nuevosHome = nuevosHome.data.data.listas.slice(0,4);
        vm.popularesHome = popularesHome.data.data.listas.slice(0,4);
        vm.masEscuchada = masEscuchada.data.data.listas
        vm.nombreUsuario = $rootScope.infoUsuario.nombre
        //console.log("nuevoshome", vm.nuevosHome)
        //console.log("populares sin tocar", popularesHome)
        //console.log(vm.popularesHome)
        console.log("masescuchada", vm.masEscuchada)

        var last = {
            bottom: false,
            top: true,
            left: false,
            right: true
        };

        vm.toastPosition = angular.extend({},last);

        vm.getToastPosition = function() {
            sanitizePosition();

            return Object.keys(vm.toastPosition)
                .filter(function(pos) { return vm.toastPosition[pos]; })
                .join(' ');
        };

        function sanitizePosition() {
            var current = vm.toastPosition;

            if ( current.bottom && last.top ) current.top = false;
            if ( current.top && last.bottom ) current.bottom = false;
            if ( current.right && last.left ) current.left = false;
            if ( current.left && last.right ) current.right = false;

            last = angular.extend({},current);
        }

        vm.toastFavorito = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Has a√±adido esta lista a favorito')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };

        vm.toastNoFavorito = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Has eliminado esta lista de favoritos')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };

        vm.verLista = function(lista){
            //console.log("llamando ver lista", lista)
            $state.go('main.verLista',{lista: lista})
        }

        vm.favorito = function(listaid, otro){
            //console.log("entreo en favorito", otro, listaid)
            if(otro == 1){
                //console.log("entro en favoritos")
                vm.favoritoId = listaid
                //console.log(vm.favoritoId)
                lodash.find(vm.nuevosHome , {listaid: listaid}).isfavorited = true
                lodash.find(vm.nuevosHome , {listaid: listaid}).numfavoritos += 1

                $http.post('/users/favorito', {favoritoId: vm.favoritoId})
                    .then(function(responseOk){
                        vm.toastFavorito()
                        //console.log(responseOk)
                    }, function(responseFail){
                        //console.log(responseFail)
                    })
            } else if (otro == 2) {
                //console.log("entro en favoritos 2")
                vm.favoritoId = listaid
                //console.log("favoritoid", vm.favoritoId)
                lodash.find(vm.popularesHome , {listaid: listaid}).isfavorited = true
                lodash.find(vm.popularesHome , {listaid: listaid}).numfavoritos += 1

                $http.post('/users/favorito', {favoritoId: vm.favoritoId})
                    .then(function(responseOk){
                        vm.toastFavorito()
                        //console.log(responseOk)
                    }, function(responseFail){
                        //console.log(responseFail)
                    })
            } else {
                //console.log("entro en favoritos 3")
                vm.favoritoId = listaid
                //console.log("favoritoid", vm.favoritoId)
                lodash.find(vm.masEscuchada, {listaid: listaid}).isfavorited = true
                lodash.find(vm.masEscuchada , {listaid: listaid}).numfavoritos += 1

                $http.post('/users/favorito', {favoritoId: vm.favoritoId})
                    .then(function(responseOk){
                        vm.toastFavorito()
                        //console.log(responseOk)
                    }, function(responseFail){
                        //console.log(responseFail)
                    })
            }

        }

        vm.nofavorito = function(listaid, otro){
            if(otro == 1){
                vm.nofavoritoId = listaid
                lodash.find(vm.nuevosHome , {listaid: listaid}).isfavorited = false
                lodash.find(vm.nuevosHome , {listaid: listaid}).numfavoritos -= 1

                $http.post('/users/noFavorito', {noFavoritoId: vm.nofavoritoId})
                    .then(function(responseOk){
                        vm.toastNoFavorito()
                        //console.log(responseOk)
                    }, function(responseFail){
                        //console.log(responseFail)
                    })
            } else if (otro == 2) {
                vm.nofavoritoId = listaid
                lodash.find(vm.popularesHome , {listaid: listaid}).isfavorited = false
                lodash.find(vm.popularesHome , {listaid: listaid}).numfavoritos -= 1

                $http.post('/users/noFavorito', {noFavoritoId: vm.nofavoritoId})
                    .then(function(responseOk){
                        vm.toastNoFavorito()
                        //console.log(responseOk)
                    }, function(responseFail){
                        //console.log(responseFail)
                    })
            } else {
                vm.nofavoritoId = listaid
                lodash.find(vm.masEscuchada , {listaid: listaid}).isfavorited = false
                lodash.find(vm.masEscuchada , {listaid: listaid}).numfavoritos -= 11

                $http.post('/users/noFavorito', {noFavoritoId: vm.nofavoritoId})
                    .then(function(responseOk){
                        vm.toastNoFavorito()
                        //console.log(responseOk)
                    }, function(responseFail){
                        //console.log(responseFail)
                    })
            }
        }

        vm.play = function(lista){
            //$rootScope.playlist = lista
            //console.log("lista reproduciendose", lista)
            $rootScope.$broadcast('playlist',lista);


        }

        vm.reproduccion = function(id, otro){

            if(otro == 1){
                //console.log("reproduciendo", id, otro)
                lodash.find(vm.nuevosHome , {listaid: id}).numreproducciones += 1
                //Qif(lodas.is)


                $http.post('/users/reproduccion', {listaid: id})
                    .then(function(responseOk){
                        //console.log(responseOk)

                    }, function(responseFail){
                        //console.log(responseFail)

                    })
            } else if (otro == 2) {
                //console.log("reproduciendo", id)
                lodash.find(vm.popularesHome , {listaid: id}).numreproducciones += 1

                $http.post('/users/reproduccion', {listaid: id})
                    .then(function(responseOk){
                        //console.log(responseOk)

                    }, function(responseFail){
                        //console.log(responseFail)

                    })
            } else {
                //console.log("reproduciendo dentro", id, vm.masEscuchada[0].numreproducciones)

                vm.masEscuchada[0].numreproducciones += 1

                $http.post('/users/reproduccion', {listaid: id})
                    .then(function(responseOk){
                        //console.log(responseOk)

                    }, function(responseFail){
                        //console.log(responseFail)

                    })
            }


        }

        vm.verLista = function(lista){
            //console.log("llamando ver lista", lista)
            $state.go('main.verLista',{lista: lista})
        }




    }


    angular.module('proyecto')
        .controller('homeCtrl',['$http','$auth','$state', '$rootScope','lodash', '$mdToast', 'nuevosHome', 'popularesHome', 'masEscuchada', homeCtrl]);

})();

/**
 * Created by jesus on 21/05/17.
 */
(function() {
    function mislistasCtrl($http,$auth,$state,$rootScope, lodash,$stateParams,$mdDialog, $mdToast, listas, favoritos){

        var vm = this;
        vm.paginaActual = $stateParams.pagina
        vm.paginaActual2 = $stateParams.pagina2
        //console.log("listas", listas, "favoritos", favoritos)
        vm.listas = listas.data.data.listas;
        vm.favoritos = favoritos.data.data.listas;
        //console.log("mis favoritos", vm.listas)
        vm.infoUsuario = $rootScope.infoUsuario
        console.log("INFO USUARIO EN PERFIL",vm.infoUsuario)
        vm.totalListas = (!lodash.isUndefined(vm.listas)) ? vm.listas[0].totalListas : 0
        vm.totalFavoritos = (!lodash.isUndefined(vm.favoritos)) ? vm.favoritos[0].totalListas : 0
        vm.abrirInput = false
        vm.nombreCambia = false
        vm.emailCambia = false
        vm.passwordCambia = false
        console.log(listas)
        if($stateParams.tab == 1){
            vm.tab1 = true
            vm.tab2 = false
        } else {
            vm.tab1 = false
            vm.tab2 = true
        }
        var last = {
            bottom: false,
            top: true,
            left: false,
            right: true
        };

        vm.toastPosition = angular.extend({},last);

        vm.getToastPosition = function() {
            sanitizePosition();

            return Object.keys(vm.toastPosition)
                .filter(function(pos) { return vm.toastPosition[pos]; })
                .join(' ');
        };

        function sanitizePosition() {
            var current = vm.toastPosition;

            if ( current.bottom && last.top ) current.top = false;
            if ( current.top && last.bottom ) current.bottom = false;
            if ( current.right && last.left ) current.left = false;
            if ( current.left && last.right ) current.right = false;

            last = angular.extend({},current);
        }

        vm.toastEliminarLista = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Lista eliminada con √©xito')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };

        vm.toastNoFavorito = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Has eliminado esta lista de favoritos')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };

        vm.showConfirm = function(ev, id) {
            //console.log("entrando en dialog")
            // Appending dialog to document.body to cover sidenav in docs app
            var confirm = $mdDialog.confirm()
                .title('¬øTe gustar√≠a eliminar esta lista?')
                .textContent('No podr√°s recuperarla en el futuro')
                .ariaLabel('Lucky day')
                .targetEvent(ev)
                .ok('Si')
                .cancel('No');

            $mdDialog.show(confirm).then(function() {
                vm.eliminar(id,function(err,data){
                    if(!err){
                        if(vm.tab1){
                            var index = _.findIndex(vm.listas, {listaid: id})
                            vm.listas.splice(index,1)
                            vm.totalListas -= 1
                        }
                    }
                })

            }, function() {

            });
        };

        vm.edit = function(lista){
            //console.log("llamando funcione edit", lista)
            $state.go('main.editList',{lista: lista})
        }

        vm.eliminar = function(id,cb){
            //console.log("llamando funcione eliminar", id)
            $http.post('/users/eliminar', {idlista: id})
                .then(function(responseOk){
                    vm.toastEliminarLista()
                    //console.log("datos brutos", responseOk)
                    cb(null,[])

                }, function(responseFail){
                    //console.log("emptyyyy query", responseFail)
                    cb(responseFail,null)
                })
        }

        vm.siguiente = function(pos,index){
            if(pos==1)
                $stateParams.pagina = index
            else
                $stateParams.pagina2 = index
            $state.go($state.current, {pagina: $stateParams.pagina, pagina2: $stateParams.pagina2, tab: pos }, {reload: "main.perfil"});
        }


        vm.nofavorito = function(listaid){
            vm.nofavoritoId = listaid
            lodash.find(vm.favoritos, {listaid: listaid}).isfavorited = false
            lodash.find(vm.favoritos, {listaid: listaid}).numfavoritos -= 1
            var index = _.findIndex(vm.favoritos, {listaid: listaid})
            vm.favoritos.splice(index,1)
            vm.totalFavoritos -= 1

            $http.post('/users/noFavorito', {noFavoritoId: vm.nofavoritoId})
                .then(function(responseOk){
                    vm.toastNoFavorito()
                    //console.log(responseOk)
                }, function(responseFail){
                    //console.log(responseFail)
                })
        }


        vm.verLista = function(lista){
            //console.log("llamando ver lista", lista)
            $state.go('main.verLista',{lista: lista})
        }

        vm.abrir = function(){
            $state.go('main.editInfo',{datos: vm.infoUsuario})
        }

        vm.play = function(lista){
            //$rootScope.playlist = lista
            $rootScope.$broadcast('playlist',lista);

        }

        vm.reproduccion = function(id){
            //console.log("reproduciendo", id)

            $http.post('/users/reproduccion', {listaid: id})
                .then(function(responseOk){
                    //console.log(responseOk)

                }, function(responseFail){
                    //console.log(responseFail)

                })


        }

    }

    angular.module('proyecto')
        .controller('mislistasCtrl',['$http','$auth','$state', '$rootScope','lodash','$stateParams','$mdDialog', '$mdToast','listas', 'favoritos', mislistasCtrl]);

})();

/**
 * Created by jesus on 21/05/17.
 */
(function() {
    function nuevosCtrl($location,$http,$auth,$state,$rootScope, lodash, $stateParams,$mdToast, nuevos, tags){
        //console.log("entro en nuevos")
        var vm = this;
        //console.log("los tags", tags.data.data)
        vm.nuevos = nuevos.data.data.listas;
        vm.tags = tags.data.data
        //console.log("nuevos" , vm.nuevos)
        vm.paginaActual = $stateParams.pagina
        vm.paginaMaxima = vm.nuevos[0].totalListas
        vm.posicion = false
        //console.log("la pagina total", vm.paginaMaxima)
        //console.log("la pagina actual", vm.paginaActual)


        var last = {
            bottom: false,
            top: true,
            left: false,
            right: true
        };

        vm.toastPosition = angular.extend({},last);

        vm.getToastPosition = function() {
            sanitizePosition();

            return Object.keys(vm.toastPosition)
                .filter(function(pos) { return vm.toastPosition[pos]; })
                .join(' ');
        };

        function sanitizePosition() {
            var current = vm.toastPosition;

            if ( current.bottom && last.top ) current.top = false;
            if ( current.top && last.bottom ) current.bottom = false;
            if ( current.right && last.left ) current.left = false;
            if ( current.left && last.right ) current.right = false;

            last = angular.extend({},current);
        }

        vm.toastFavorito = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Has a√±adido esta lista a favorito')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };

        vm.toastNoFavorito = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Has eliminado esta lista de favoritos')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };



        vm.buscar = function(){
            //console.log("%"+vm.busqueda+"%")
            vm.buscador = {tipo: vm.tipo, busqueda: vm.busqueda,  ordenar: vm.ordenar, idtag: vm.etiqueta }

            //console.log("buscador", vm.buscador)
            vm.paginaActual = 1
            vm.buscador.busqueda = "%"+vm.buscador.busqueda+'%'
            $http.post('/users/search/'+vm.paginaActual, vm.buscador)
                .then(function(responseOk){
                    //console.log("datos brutos", responseOk)
                    //console.log("datos busqueda", responseOk.data.data.listas)
                    //$state.go('main.buscador', {resultado: responseOk.data.data.listas})
                    vm.nuevos = responseOk.data.data.listas
                    vm.vacioMensaje =  "No hay ningun resultado"
                    vm.vacio =  (!responseOk.data.data.listas) ? true : false
                    vm.paginaMaxima = responseOk.data.data.listas[0].totalListas
                    vm.posicion = true

                }, function(responseFail){
                    //console.log("emptyyyy query", responseFail)
                })

        }


        vm.favorito = function(listaid){
            vm.favoritoId = listaid
            lodash.find(vm.nuevos, {listaid: listaid}).isfavorited = true
            lodash.find(vm.nuevos, {listaid: listaid}).numfavoritos += 1

            $http.post('/users/favorito', {favoritoId: vm.favoritoId})
                .then(function(responseOk){
                    //console.log(responseOk)
                    vm.toastFavorito()
                }, function(responseFail){
                    //console.log(responseFail)

                })

        }

        vm.nofavorito = function(listaid){
            vm.nofavoritoId = listaid
            lodash.find(vm.nuevos, {listaid: listaid}).isfavorited = false
            lodash.find(vm.nuevos, {listaid: listaid}).numfavoritos -= 1

            $http.post('/users/noFavorito', {noFavoritoId: vm.nofavoritoId})
                .then(function(responseOk){
                    vm.toastNoFavorito()
                    //console.log(responseOk)
                }, function(responseFail){
                    //console.log(responseFail)
                })
        }

        vm.play = function(lista){
            //$rootScope.playlist = lista
            //console.log("lista reproduciendose", lista)
            $rootScope.$broadcast('playlist',lista);


        }

        vm.reproduccion = function(id){
            //console.log("reproduciendo", id)
            //console.log
            lodash.find(vm.nuevos, {listaid: id}).numreproducciones += 1

            $http.post('/users/reproduccion', {listaid: id})
                .then(function(responseOk){
                    //console.log(responseOk)

                }, function(responseFail){
                    //console.log(responseFail)

                })


        }

        vm.verLista = function(lista){
            //console.log("llamando ver lista", lista)
            $state.go('main.verLista',{lista: lista})
        }

        vm.anterior = function(){

        }

        vm.siguiente = function(index){
            if(!vm.posicion){
                // console.log("index vale ",index)
                $stateParams.pagina = index
                $state.go($state.current, {pagina: $stateParams.pagina}, {reload: 'main.nuevos'});
            } else {
                //console.log("la pagina en el else", vm.paginaActual)
                $http.post('/users/search/'+vm.paginaActual, vm.buscador)
                    .then(function(responseOk){
                        //console.log("datos brutos2", responseOk)
                        //console.log("datos busqueda2", responseOk.data.data.listas)
                        //$state.go('main.buscador', {resultado: responseOk.data.data.listas})
                        vm.nuevos = responseOk.data.data.listas
                        vm.posicion = true
                    }, function(responseFail){
                        //console.log("emptyyyy query", responseFail)
                    })
            }
        }


    }

    angular.module('proyecto')
        .controller('nuevosCtrl',['$location','$http','$auth','$state', '$rootScope', 'lodash', '$stateParams', '$mdToast', 'nuevos', 'tags', nuevosCtrl]);

})();

/**
 * Created by jesus on 17/06/17.
 */
(function() {
    function perfilUsuarioCtrl($http,$auth,$state,$rootScope, lodash, $stateParams, $mdToast, listas, favoritos){
        var vm = this;
        if(listas.data.codigo.codigo == "no existe")
            $state.go('main.home')
        vm.paginaActual = $stateParams.pagina
        vm.paginaActual2 = $stateParams.pagina2

        //console.log("entrando en perfil", listas)
        //console.log("entrando en perfil favoritos", favoritos)
        vm.listas = listas.data.data.listas;
        vm.favoritos = favoritos.data.data.listas

        var last = {
            bottom: false,
            top: true,
            left: false,
            right: true
        };

        vm.toastPosition = angular.extend({},last);

        vm.getToastPosition = function() {
            sanitizePosition();

            return Object.keys(vm.toastPosition)
                .filter(function(pos) { return vm.toastPosition[pos]; })
                .join(' ');
        };

        function sanitizePosition() {
            var current = vm.toastPosition;

            if ( current.bottom && last.top ) current.top = false;
            if ( current.top && last.bottom ) current.bottom = false;
            if ( current.right && last.left ) current.left = false;
            if ( current.left && last.right ) current.right = false;

            last = angular.extend({},current);
        }

        vm.toastFavorito = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Has a√±adido esta lista a favorito')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };

        vm.toastNoFavorito = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Has eliminado esta lista de favoritos')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };

        vm.favorito = function(listaid, por){
            if(por == 1){
                vm.favoritoId = listaid
                lodash.find(vm.listas, {listaid: listaid}).isfavorited = true
                lodash.find(vm.listas, {listaid: listaid}).numfavoritos += 1

                $http.post('/users/favorito', {favoritoId: vm.favoritoId})
                    .then(function(responseOk){
                        //console.log(responseOk)
                        vm.toastFavorito()
                    }, function(responseFail){
                        //console.log(responseFail)
                    })
            } else {
                vm.favoritoId = listaid
                lodash.find(vm.favoritos, {listaid: listaid}).isfavorited = true
                lodash.find(vm.favoritos, {listaid: listaid}).numfavoritos += 1

                $http.post('/users/favorito', {favoritoId: vm.favoritoId})
                    .then(function(responseOk){
                        //console.log(responseOk)
                        vm.toastFavorito()
                    }, function(responseFail){
                        //console.log(responseFail)
                    })
            }

        }

        vm.nofavorito = function(listaid, por){
            if(por == 1){
                vm.nofavoritoId = listaid
                lodash.find(vm.listas, {listaid: listaid}).isfavorited = false
                lodash.find(vm.listas, {listaid: listaid}).numfavoritos -= 1

                $http.post('/users/noFavorito', {noFavoritoId: vm.nofavoritoId})
                    .then(function(responseOk){
                        //console.log(responseOk)
                        vm.toastNoFavorito()
                    }, function(responseFail){
                        //console.log(responseFail)
                    })
            } else {
                vm.nofavoritoId = listaid
                lodash.find(vm.favoritos, {listaid: listaid}).isfavorited = false
                lodash.find(vm.favoritos, {listaid: listaid}).numfavoritos -= 1

                $http.post('/users/noFavorito', {noFavoritoId: vm.nofavoritoId})
                    .then(function(responseOk){
                        //console.log(responseOk)
                        vm.toastNoFavorito()
                    }, function(responseFail){
                        //console.log(responseFail)
                    })
            }
        }

        vm.play = function(lista){
            //$rootScope.playlist = lista
            //console.log("lista reproduciendose", lista)
            $rootScope.$broadcast('playlist',lista);


        }

        vm.reproduccion = function(id, por){
            if(por == 1){
                //console.log("reproduciendo", id)
                lodash.find(vm.listas, {listaid: id}).numreproducciones += 1

                $http.post('/users/reproduccion', {listaid: id})
                    .then(function(responseOk){
                        //console.log(responseOk)

                    }, function(responseFail){
                        //console.log(responseFail)

                    })
            } else {
                //console.log("reproduciendo", lodash.find(vm.favoritos, {listaid: id}).numreproducciones)
                lodash.find(vm.favoritos, {listaid: id}).numreproducciones += 1

                $http.post('/users/reproduccion', {listaid: id})
                    .then(function(responseOk){
                        //console.log(responseOk)

                    }, function(responseFail){
                        //console.log(responseFail)

                    })
            }


        }

        vm.verLista = function(lista){
            //console.log("llamando ver lista", lista)
            $state.go('main.verLista',{lista: lista})
        }

        if($stateParams.tab == 1){
            vm.tab1 = true
            vm.tab2 = false
        } else {
            vm.tab1 = false
            vm.tab2 = true
        }

        vm.siguiente = function(pos, index){
            if(pos==1)
                $stateParams.pagina = index
            else
                $stateParams.pagina2 = index
            $state.go($state.current, {pagina: $stateParams.pagina, pagina2: $stateParams.pagina2, tab: pos }, {reload: "main.perfilUsuario"});
        }

    }

    angular.module('proyecto')
        .controller('perfilUsuarioCtrl',['$http','$auth','$state', '$rootScope','lodash','$stateParams','$mdToast','listas','favoritos', perfilUsuarioCtrl]);

})();
/**
 * Created by jesus on 8/06/17.
 */
(function() {
    function popularesCtrl($http,$auth,$state,$rootScope, listas){
        //console.log("entreo en populares2")
        //console.log("populares")
        var vm = this;
        vm.listas = listas.data.data.listas;
        //console.log("populares", vm.listas)

        //     vm.edit = function(lista){
        //         //console.log("llamando funcione edit", lista)
        //         $state.go('main.editList',{lista: lista})
        //     }
        //
        //     vm.play = function(lista){
        //         //$rootScope.playlist = lista
        //         $rootScope.$broadcast('playlist',lista);
        //
        //     }
        //
    }

    angular.module('proyecto')
        .controller('popularesCtrl',['$http','$auth','$state', '$rootScope', 'listas', popularesCtrl]);

})();

/**
 * Created by jesus on 12/06/17.
 */

(function() {
    function recomendacionesCtrl($http,$auth,$state,$rootScope,lodash, $mdToast,  recomendadas){
        var vm = this;
        vm.recomienda = false
        //console.log("las listas", recomendadas)
        if(recomendadas.data.data.artistas.length == 0){
            //console.log("holi")
            vm.recomienda = true
        } else {
            vm.artistas = [recomendadas.data.data.artistas]
            vm.listas = recomendadas.data.data.listas.listas.slice(0,4)
            //console.log("las listas")
            //console.log("artista id", vm.artistas[0][0].lista_idlista)
            vm.ids = lodash.uniq(lodash.map(vm.artistas, 'lista_idlista')).slice(0,4)
            //vm.recomendadas = [{artistas: [], listaparaPintar:{}},{}]
            vm.recomendadas = []
            lodash.forEach(vm.ids, function(item) {
                vm.recomendadas.push({artistas: lodash.map(lodash.filter(vm.artistas,{lista_idlista: item}), 'artista'),
                    listas: lodash.filter(vm.listas.listas,{listaid: item})
                })
            })

            var last = {
                bottom: false,
                top: true,
                left: false,
                right: true
            };

            vm.toastPosition = angular.extend({},last);

            vm.getToastPosition = function() {
                sanitizePosition();

                return Object.keys(vm.toastPosition)
                    .filter(function(pos) { return vm.toastPosition[pos]; })
                    .join(' ');
            };

            function sanitizePosition() {
                var current = vm.toastPosition;

                if ( current.bottom && last.top ) current.top = false;
                if ( current.top && last.bottom ) current.bottom = false;
                if ( current.right && last.left ) current.left = false;
                if ( current.left && last.right ) current.right = false;

                last = angular.extend({},current);
            }

            vm.toastFavorito = function() {
                var pinTo = vm.getToastPosition();
                //console.log("entro en toast")
                $mdToast.show(
                    $mdToast.simple()
                        .textContent('Has a√±adido esta lista a favorito')
                        .position(pinTo )
                        .hideDelay(3000)
                );
            };

            vm.toastNoFavorito = function() {
                var pinTo = vm.getToastPosition();
                //console.log("entro en toast")
                $mdToast.show(
                    $mdToast.simple()
                        .textContent('Has eliminado esta lista de favoritos')
                        .position(pinTo )
                        .hideDelay(3000)
                );
            };


            //console.log("recomendaciones", vm.recomendadas)

            vm.favorito = function(listaid){
                //console.log("entro")
                //console.log("hola", vm.recomendadas)
                vm.favoritoId = listaid
                lodash.find(vm.listas, {listaid: listaid}).isfavorited = true
                lodash.find(vm.listas, {listaid: listaid}).numfavoritos += 1

                $http.post('/users/favorito', {favoritoId: vm.favoritoId})
                    .then(function(responseOk){
                        vm.toastFavorito()
                        //console.log(responseOk)

                    }, function(responseFail){
                        //console.log(responseFail)

                    })

            }

            vm.nofavorito = function(listaid){
                vm.nofavoritoId = listaid
                lodash.find(vm.listas, {listaid: listaid}).isfavorited = false
                lodash.find(vm.listas, {listaid: listaid}).numfavoritos -= 1

                $http.post('/users/noFavorito', {noFavoritoId: vm.nofavoritoId})
                    .then(function(responseOk){
                        vm.toastNoFavorito()
                        //console.log(responseOk)
                    }, function(responseFail){
                        //console.log(responseFail)
                    })
            }

            vm.play = function(lista){
                //$rootScope.playlist = lista
                //console.log("lista reproduciendose", lista)
                $rootScope.$broadcast('playlist',lista);


            }

            vm.reproduccion = function(id){
                //console.log("reproduciendo", id)
                //console.log
                lodash.find(vm.listas, {listaid: id}).numreproducciones += 1

                $http.post('/users/reproduccion', {listaid: id})
                    .then(function(responseOk){
                        //console.log(responseOk)

                    }, function(responseFail){
                        //console.log(responseFail)

                    })


            }
        }

    }


    angular.module('proyecto')
        .controller('recomendacionesCtrl',['$http','$auth','$state', '$rootScope','lodash', '$mdToast', 'recomendadas', recomendacionesCtrl]);

})();

/**
 * Created by jesus on 11/06/17.
 */
(function() {
    function verlistaCtrl($http,$auth,$state,$rootScope, $stateParams, $mdDialog, $mdToast, lodash){
        //if(lodash.isNull($stateParams.lista)) return $state.go("main.mislistas")
        //console.log("entreo aqui")
        if(!$stateParams.lista)
            $state.go('main.nuevos')
        var vm = this;
        vm.verLista = $stateParams.lista
        //console.log("toda ls lista", $stateParams)
        var last = {
            bottom: false,
            top: true,
            left: false,
            right: true
        };

        vm.toastPosition = angular.extend({},last);

        vm.getToastPosition = function() {
            sanitizePosition();

            return Object.keys(vm.toastPosition)
                .filter(function(pos) { return vm.toastPosition[pos]; })
                .join(' ');
        };

        function sanitizePosition() {
            var current = vm.toastPosition;

            if ( current.bottom && last.top ) current.top = false;
            if ( current.top && last.bottom ) current.bottom = false;
            if ( current.right && last.left ) current.left = false;
            if ( current.left && last.right ) current.right = false;

            last = angular.extend({},current);
        }

        vm.toastFavorito = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Has a√±adido esta lista a favorito')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };

        vm.toastNoFavorito = function() {
            var pinTo = vm.getToastPosition();
            //console.log("entro en toast")
            $mdToast.show(
                $mdToast.simple()
                    .textContent('Has eliminado esta lista de favoritos')
                    .position(pinTo )
                    .hideDelay(3000)
            );
        };


        vm.favorito = function(listaid){
            vm.favoritoId = listaid
            vm.verLista.isfavorited = true
            vm.verLista.numfavoritos += 1

            $http.post('/users/favorito', {favoritoId: vm.favoritoId})
                .then(function(responseOk){
                    //console.log(responseOk)
                    vm.toastFavorito()
                }, function(responseFail){
                    //console.log(responseFail)
                })

        }

        vm.nofavorito = function(listaid){
            vm.nofavoritoId = listaid
            vm.verLista.isfavorited = false
            vm.verLista.numfavoritos -= 1

            $http.post('/users/noFavorito', {noFavoritoId: vm.nofavoritoId})
                .then(function(responseOk){
                    vm.toastNoFavorito()
                    //console.log(responseOk)
                }, function(responseFail){
                    //console.log(responseFail)
                })
        }

        vm.play = function(lista){
            //$rootScope.playlist = lista
            //console.log("lista reproduciendose", lista)
            $rootScope.$broadcast('playlist',lista);


        }

        vm.reproduccion = function(id){
            //console.log("reproduciendo", id)
            //console.log
            lodash.find(vm.verLista, {listaid: id}).numreproducciones += 1

            $http.post('/users/reproduccion', {listaid: id})
                .then(function(responseOk){
                    //console.log(responseOk)

                }, function(responseFail){
                    //console.log(responseFail)

                })


        }


    }

    angular.module('proyecto')
        .controller('verlistaCtrl',['$http','$auth','$state', '$rootScope','$stateParams', '$mdDialog', '$mdToast', 'lodash', verlistaCtrl]);

})();

/**
 * Created by guzman on 4/02/17.
 */



(function() {
    function loginCtrl($http,$auth,$state,$rootScope){
        var vm = this;
        vm.login = function(){

            //console.log("Info login", vm.usernameModel, vm.passwordModel)
            /**
             * TODO: Llamada al servidor
             */
            var json = {
                usernameServer : vm.usernameModel,
                passwordServer : vm.passwordModel
            };
            $auth.login(json)
                .then(function(response) {
                        if (response.data.codigo === 500){
                            swal(
                                'Oops...',
                                'Su usuario o contrase√±a son incorrectos',
                                'error'
                            )
                            //$rootScope.$emit("Loginfail", response)
                        }else{
                            $state.go('main.home')
                        }

                    },
                    function(response) {
                        swal(
                            'Oops...',
                            'Su usuario o contrase√±a son incorrectos',
                            'error'
                        )
                        $rootScope.$emit("Loginfail",response)

                    });
        }
    }

    angular.module('proyecto')
        .controller('loginCtrl',['$http','$auth','$state', '$rootScope', loginCtrl]);

})();

/**
 * Created by guzman on 4/02/17.
 */


(function() {
    function registroCtrl($http,$auth,$state){
        var vm = this;
        vm.registro = function(){
            var json = {
                usernameRegistro : vm.usernameModel,
                passwordRegistro : vm.passwordModel,
                emailRegistro : vm.emailModel
            };

            $http.post('/registerForm',json)
                .then(function(response){
                        ////console.log("respuesta",response);
                        vm.status = "OK";
                        var login = {
                            usernameServer : json.usernameRegistro,
                            passwordServer : json.passwordRegistro
                        }
                        $auth.login(login)
                            .then(function(response) {
                                    //console.log("entro en redi")
                                    $state.go('main.home')
                                },
                                function(response) {
                                    swal(
                                        'Oops...',
                                        'Su usuario o contrase√±a son incorrectos',
                                        'error'
                                    )
                                    $rootScope.$emit("Loginfail",response)

                                });
                    },
                    function(response) {
                        vm.status = "Fallo";
                        //console.log("fallo")
                        swal(
                            'Oops...',
                            'Error al registrar! El usuario o email ya existen',
                            'error'
                        )
                    });

        }
    }

    angular.module('proyecto')
        .controller('registroCtrl',['$http',"$auth","$state",registroCtrl]);

})();

/**
 * Created by jesus on 18/05/17.
 */
(function() {
    function logoutCtrl($http,$state,$auth){
        var vm = this;
        $auth.logout()
        $state.go('home.login')



    }

    angular.module('proyecto')
        .controller('logoutCtrl',['$http','$state', '$auth', logoutCtrl]);

})();
