/**
 * Created by guzman on 4/02/17.
 */

/**
 * Core librer√≠a
 */
angular.module("proyecto", [
    'ui.router',
    'ngMaterial',
    'satellizer',
    'youtube-embed',
    'ngLodash',
    'ngYoutubeEmbed'
]).config(function($mdThemingProvider) {
    $mdThemingProvider.theme('default')
        .primaryPalette('grey')
        .accentPalette('blue');
});
/**
 * Created by guzman on 4/02/17.
 */



(function() {
    function routes($stateProvider,$locationProvider,$authProvider,$urlRouterProvider){
        $locationProvider.html5Mode(true);
        $authProvider.loginUrl = '/loginForm';
        $authProvider.tokenName = 'token';
        $authProvider.tokenPrefix = 'miApp';
        $authProvider.tokenHeader = 'token';

        $stateProvider

            .state('home',{
                abstract: true,
                templateUrl: '/frameNoAuth'
            })

            .state('home.login',{
                url: "/",
                controller: 'loginCtrl',
                controllerAs: 'lc',
                templateUrl: '/login'
            })

            .state('home.registro',{
                url: "/signup",
                controller: 'registroCtrl',
                controllerAs: 'rc',
                templateUrl: '/registro'
            })

            .state('main',{
                abstract: true,
                controller: 'frameCtrl',
                controllerAs: 'fc',
                templateUrl: '/users/frame',
                resolve : {
                    tags: ['$http',function($http){
                        return $http.get('/users/getTags')
                            .then(function(response){
                                console.log("query tags")
                                return response;
                            },function(response) {
                                console.log("error query tags")
                                return response;
                            })
                    }]
                }
            })


            .state('main.nuevos',{
                url: "/nuevos",
                controller: 'nuevosCtrl',
                controllerAs: 'nct',
                templateUrl: '/users/tempNuevos',
                params: {requireLogin : true},
                resolve : {
                    nuevos: ['$http',function($http){
                        return $http.get('/users/newLists')
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }]
                }
            })

            .state('main.populares',{
                url: "/populares",
                //controller: 'indexController',
                //controllerAs: 'ic',
                templateUrl: '/users/tempPopulares',
                params: {requireLogin : true}
            })

            .state('main.recomendaciones',{
                url: "/recomendaciones",
                //controller: 'indexController',
                //controllerAs: 'ic',
                templateUrl: '/users/tempRecomendaciones',
                params: {requireLogin : true}
            })

            .state('main.mislistas',{
                url: "/mislistas",
                controller: 'mislistasCtrl',
                controllerAs: 'mlc',
                templateUrl: '/users/tempMisListas',
                params: {requireLogin : true},
                resolve : {
                    listas: ['$http',function($http){
                        return $http.get('/users/getLists')
                            .then(function(response){
                                return response;
                            },function(response) {
                                return response;
                            })
                    }]
                }
            })

            .state('main.editList',{
                url: "/mislistas/edit",
                controller: 'editListCtrl',
                controllerAs: 'elc',
                templateUrl: '/users/tempEditList',
                params: {requireLogin : true, lista: null}
            })

            .state('main.logout',{
                url: "/logout",
                controller: 'logoutCtrl',
                controllerAs: 'lgc',
                template: '<p>Logout</p>'
            })

            .state('403',{
                url: "/403",
                templateUrl: '/403'
            })

            .state('404',{
                url: "/404",
                template: '<p>404</p>'
            })

        $urlRouterProvider.otherwise('/mislistas')



    }

    angular.module('proyecto')
        .config(['$stateProvider', '$locationProvider', '$authProvider', '$urlRouterProvider', routes]);

})();


/**
 * Created by jesus on 18/05/17.
 */
(function() {
    function run($rootScope,$state,$auth){

        $rootScope.$on('Loginfail',function(datos){
            $state.go('403')
        })

        $rootScope.$on('$stateChangeStart',
            function(event, toState, toParams, fromState, fromParams, options){
                if ( toState.data && toState.data.requireLogin && !$auth.isAuthenticated() ) {
                    event.preventDefault();
                    $state.go('403');
                }

                // transitionTo() promise will be rejected with
                // a 'transition prevented' error
            })
        $rootScope.$on('$stateChangeError',
            function(event, toState, toParams, fromState, fromParams, options){
                    event.preventDefault();
                    $state.go('404');

            })


    }

    angular.module('proyecto')
        .run(['$rootScope','$state', '$auth', run]);

})();

/**
 * Created by jesus on 30/05/17.
 */
(function() {
    function editListCtrl($http,$auth,$state,$rootScope, $stateParams, $mdDialog, lodash){
        if(lodash.isNull($stateParams.lista)) return $state.go("main.mislistas")
        console.log("entreo aqui")
        var vm = this;
        vm.editList = $stateParams.lista
        vm.firstPosition = vm.editList.info.length
        console.log("primera posicion", vm.firstPosition)
        console.log("toda ls lista", $stateParams.lista)

        vm.eliminar = function(){
            vm.seleccionados = lodash.map(lodash.filter(vm.editList.info,function(o){return o.seleccionado == true}),'idenlace')
            lodash.remove(vm.editList.info, function(currentObject) {
                return currentObject.seleccionado === true;
            });
            console.log(vm.seleccionados)

            var edit = {idurls: vm.seleccionados, idlista: vm.editList.idlista}

            console.log("json", edit)

            $http.post('/users/editList', edit)
                .then(function(responseOk){
                    console.log(responseOk)
                },
                function(responseFail){
                    console.log(responseFail)
                })
        }

        vm.addNew = function(ev){
            $mdDialog.show({
                controller: function($mdDialog){
                    var vmd = this;
                    vmd.urls = [];
                    vmd.page = "";
                    vmd.pagePrev = "";
                    vmd.pageNext = "";
                    vmd.artista = "";
                    vmd.cancion = "";

                    vmd.answer = function(){
                        vm.name = vmd.nombre;
                        $mdDialog.hide();
                    }

                    vmd.close = function() {
                        vm.editList.info = vm.editList.info.slice(0,vm.firstPosition)
                        vmd.urls = []
                        console.log("borrando",vm.firstPosition)
                        $mdDialog.hide();
                    }

                    vmd.addUrl = function(obj) {

                        vmd.urls.push({
                            thumbnail: obj.snippet.thumbnails.default.url ,
                            url: "https://www.youtube.com/watch?v="+obj.id.videoId,
                            artista: obj.snippet.title.split("-")[0],
                            cancion: _.isUndefined(obj.snippet.title.split("-")[1]) ? "unknown" : obj.snippet.title.split("-")[1]
                        })
                        console.log(vmd.urls)
                        vm.editList.info.push({
                            thumbnail: obj.snippet.thumbnails.default.url ,
                            url: "https://www.youtube.com/watch?v="+obj.id.videoId,
                            artista: obj.snippet.title.split("-")[0],
                            cancion: _.isUndefined(obj.snippet.title.split("-")[1]) ? "unknown" : obj.snippet.title.split("-")[1]
                        })
                    }

                    vmd.searchUrl = function(value , index) {

                        if(index === 0){
                            vmd.page = vmd.pagePrev;
                            console.log("Vale", vmd.page)
                        } else {
                            vmd.page = vmd.pageNext;
                            console.log("Vale2", vmd.page)
                        }

                        var key = 'AIzaSyBX1ayzZTlapJWNuhSYZRlkSUhU-NlOrCA'
                        var url = 'https://content.googleapis.com/youtube/v3/search?' +
                            '&key='+key+'&part=snippet&maxResults=3' +
                            '&q='+value+'&type=video' +
                            '&videoEmbeddable=true&pageToken='+vmd.page


                        console.log("primer then")
                        $http.get(url).then(function (data) {

                            if(!data.data.prevPageToken){
                                vmd.pageNext = data.data.nextPageToken
                                vmd.firstPage = true
                                console.log("si no prev(primera)" )
                            } else {
                                //vmd.page = (index == 0) ? data.data.prevPageToken : data.data.nextPageToken;
                                if(!data.data.prevPageToken){
                                    vmd.pageNext = data.data.nextPageTokenS

                                } else {
                                    vmd.pageNext = data.data.nextPageToken
                                    vmd.pagePrev = data.data.prevPageToken

                                }
                                console.log("si hay prev")
                                console.log(vmd.page)
                                vmd.firstPage = false
                            }
                            vmd.videoIds = data.data.items
                            data = {}
                            console.info('videos from search by query', data);
                        },function(err){
                            console.error(err.data)
                        });

                    }

                    vm.urls = vmd.urls;
                },
                controllerAs: "eld",
                templateUrl: '/users/addSongDialog',
                parent: angular.element(document.body),
                targetEvent: ev,
                autoWrap: false,
                bindToController: true
            })
                .then(function() {

                    var dataList = {
                        urlsServer: vm.urls,
                        idlista: vm.editList.idlista
                    }
                    if(dataList.urlsServer.length >=1) {
                        $http.post('/users/addSongs', dataList)
                            .then(function(responseOk){
                                console.log(responseOk)
                            },function(responseFail){
                                console.error(responseFail);
                            })
                    }

                }, function() {
                    console.log("asdal");
                });
        }

        vm.songEdit = function(idenlace, ev){
            $mdDialog.show({
                controller: function($mdDialog){
                    var vme = this;
                    vme.nuevoArtista = ""
                    vme.nuevaCancion = ""
                    vme.save = function(id) {
                        vm.nuevoArtista = vme.artista
                        vm.nuevaCancion = vme.cancion
                        vm.idenlace = idenlace
                        vm.idlista = id
                        $mdDialog.hide();
                    }

                    vme.close = function() {
                        $mdDialog.hide();
                    }
                    // vm.nuevoArtista = vme.nuevoArtista
                    // vm.nuevaCancion = vme.nuevaCancion
                    // vm.idenlace = vme.idenlace
                    // vm.idlista = vme.idlista
                },
                controllerAs: "sec",
                templateUrl: '/users/songEditDialog',
                parent: angular.element(document.body),
                targetEvent: ev,
                autoWrap: false,
                bindToController: true
            })
                .then(function(){
                    var dataEditSong = {
                        nuevoArtista : vm.nuevoArtista,
                        nuevaCancion : vm.nuevaCancion,
                        idenlace : vm.idenlace,
                        idlista : vm.idlista
                    }
                    console.log("datos pa edita", dataEditSong)
                    $http.post('/users/songEdit', dataEditSong)
                        .then(function(responseOk){
                            console.log(responseOk)
                        }, function(responseFail){
                            console.log(responseFail)
                        })
                })
        }



    }

    angular.module('proyecto')
        .controller('editListCtrl',['$http','$auth','$state', '$rootScope','$stateParams', '$mdDialog', 'lodash', editListCtrl]);

})();

/**
 * Created by guzman on 4/02/17.
 */



(function() {
    function frameCtrl($http,$state,$auth, $mdDialog, lodash, tags , $rootScope, $scope) {
        var vm = this;
        vm.name = ""
        vm.cualquiera = "aa"
        vm.showAdvanced = function (ev) {
            $mdDialog.show({
                controller: function ($mdDialog) {
                    var vmd = this;
                    vmd.allTags = tags.data.data
                    vmd.urls = [];
                    vmd.tagsSelected = [];
                    vmd.page = "";
                    vmd.pagePrev = "";
                    vmd.pageNext = "";
                    vmd.artista = "";
                    vmd.cancion = "";

                    vmd.createFilterFor = function (query) {

                        var lowercaseQuery = angular.lowercase(query);
                        console.log("lower", lowercaseQuery)

                        return function filterFn(contact) {
                            //console.log("tagsSelected ",tagsSelected)
                            return (contact.nombre.indexOf(lowercaseQuery) !== -1);
                        };

                    }


                    vmd.filter = function (criteria) {
                        console.log(criteria)
                        //return criteria ? vmd.allTags.filter(createFilterFor(criteria)) : [];
                        return criteria ? vmd.allTags.filter(vmd.createFilterFor(criteria)) : [];

                    }


                    vmd.answer = function () {
                        vm.name = vmd.nombre;
                        $mdDialog.hide();
                    }

                    vmd.close = function () {
                        $mdDialog.hide();
                    }

                    vmd.addUrl = function (obj) {

                        vmd.urls.push({
                            thumbnail: obj.snippet.thumbnails.default.url,
                            url: "https://www.youtube.com/watch?v=" + obj.id.videoId,
                            artista: obj.snippet.title.split("-")[0],
                            cancion: _.isUndefined(obj.snippet.title.split("-")[1]) ? "unknown" : obj.snippet.title.split("-")[1]
                        })
                        console.log(vmd.urls)
                    }


                    vmd.editSong = function (index) {
                        $mdDialog.show({
                            controller: function () {
                                var vme = this;
                                vme.save = function () {
                                    vmd.urls[index].artista = vme.artista
                                    vmd.urls[index].cancion = vme.cancion
                                    $mdDialog.hide();
                                }

                                vme.close = function () {
                                    $mdDialog.hide();
                                }
                            },
                            multiple: true,
                            controllerAs: "mc",
                            templateUrl: '/users/editSongDialog.jade',
                            preserveScope: true,
                            skipHide: true

                        })

                    }


                    vmd.searchUrl = function (value, index) {

                        if (index === 0) {
                            vmd.page = vmd.pagePrev;
                            console.log("Vale", vmd.page)
                        } else {
                            vmd.page = vmd.pageNext;
                            console.log("Vale2", vmd.page)
                        }

                        var key = 'AIzaSyBX1ayzZTlapJWNuhSYZRlkSUhU-NlOrCA'
                        var url = 'https://content.googleapis.com/youtube/v3/search?' +
                            '&key=' + key + '&part=snippet&maxResults=3' +
                            '&q=' + value + '&type=video' +
                            '&videoEmbeddable=true&pageToken=' + vmd.page


                        console.log("primer then")
                        $http.get(url).then(function (data) {

                            if (!data.data.prevPageToken) {
                                vmd.pageNext = data.data.nextPageToken
                                vmd.firstPage = true
                                console.log("si no prev(primera)")
                            } else {
                                //vmd.page = (index == 0) ? data.data.prevPageToken : data.data.nextPageToken;
                                if (!data.data.prevPageToken) {
                                    vmd.pageNext = data.data.nextPageTokenS

                                } else {
                                    vmd.pageNext = data.data.nextPageToken
                                    vmd.pagePrev = data.data.prevPageToken

                                }
                                console.log("si hay prev")
                                console.log(vmd.page)
                                vmd.firstPage = false
                            }
                            vmd.videoIds = data.data.items
                            data = {}
                            console.info('videos from search by query', data);
                        }, function (err) {
                            console.error(err.data)
                        });

                    }


                    vm.urls = vmd.urls;
                    vm.tags = vmd.tagsSelected
                    //vm.tags = lodash.map(vmd.tagsSelected, "idetiquetas")

                },
                controllerAs: "mc",
                templateUrl: '/users/addListDialog',
                parent: angular.element(document.body),
                targetEvent: ev,
                autoWrap: false,
                bindToController: true
                // clickOutsideToClose:true
            })
                .then(function () {

                    var dataList = {
                        nombreServer: vm.name,
                        tagsServer: vm.tags,
                        urlsServer: vm.urls
                    }
                    console.log(dataList.tagsServer)
                    if (dataList.nombreServer != "" && dataList.tagsServer.length >= 1 && dataList.urlsServer.length >= 1) {
                        $http.post('/users/addList', dataList)
                            .then(function (responseOk) {
                                console.log(responseOk)
                            }, function (responseFail) {
                                console.error(responseFail);
                            })
                    }

                }, function () {
                    console.log("asdal");
                });
        };
        vm.playerVars = {autoplay: 1}
        vm.player = ""
        vm.idVideo="null"
        vm.youtube=false;
        $scope.$on('youtube.player.ready', function (event, player) {
            console.log("el reproductor esta listo");
            vm.player = player
        })
        $scope.$on('playlist', function (event, lista) {
            console.log("recibo el evento desde framectrl", event, lista)
            //event.preventDefault();
            //$state.go('404');
            vm.playlist = lista;

            vm.idVideos = lodash.map(vm.playlist, function(o){
                return o.url.split("=")[1]
            })
            console.log("idvideos",vm.idVideos)
            // vm.idVideos = vm.playlist[0].url.split("=")[1]
            vm.youtube=true;
            vm.player.loadPlaylist({playlist: vm.idVideos})


        })
    }

    angular.module('proyecto')
        .controller('frameCtrl', ['$http', '$state', '$auth', '$mdDialog', 'lodash', 'tags', '$rootScope', '$scope', frameCtrl]);

})();
/**
 * Created by jesus on 18/05/17.
 */
(function() {
    function logoutCtrl($http,$state,$auth){
        var vm = this;
        $auth.logout()
        $state.go('home.login')



    }

    angular.module('proyecto')
        .controller('logoutCtrl',['$http','$state', '$auth', logoutCtrl]);

})();

/**
 * Created by jesus on 21/05/17.
 */
(function() {
    function mislistasCtrl($http,$auth,$state,$rootScope, listas){
        console.log("entreo")
        var vm = this;
        vm.listas = listas.data.data.listas;
        console.log(listas)
        vm.edit = function(lista){
            console.log("llamando funcione edit", lista)
            $state.go(
                'main.editList',
                {lista: lista}
            )
        }

        vm.play = function(lista){
            //$rootScope.playlist = lista
            $rootScope.$broadcast('playlist',lista);
            
        }

    }

    angular.module('proyecto')
        .controller('mislistasCtrl',['$http','$auth','$state', '$rootScope','listas', mislistasCtrl]);

})();

/**
 * Created by jesus on 21/05/17.
 */
(function() {
    function nuevosCtrl($http,$auth,$state,$rootScope, nuevos){
        console.log("entro en nuevos")
        var vm = this;
        vm.nuevos = nuevos.data.data.listas;
        console.log("nuevos" , vm.nuevos)

    }

    angular.module('proyecto')
        .controller('nuevosCtrl',['$http','$auth','$state', '$rootScope', 'nuevos', nuevosCtrl]);

})();

/**
 * Created by guzman on 4/02/17.
 */



(function() {
    function loginCtrl($http,$auth,$state,$rootScope){
        var vm = this;
        vm.login = function(){

            console.log("Info login", vm.usernameModel, vm.passwordModel)
            /**
             * TODO: Llamada al servidor
             */
            var json = {
                usernameServer : vm.usernameModel,
                passwordServer : vm.passwordModel
            };
            $auth.login(json)
                .then(function(response){
                        if (response.data.codigo === 500)
                            // swal(
                            //     'Oops...',
                            //     'Error al iniciar sesi√≥n',
                            //     'error'
                            // )
                            $rootScope.$emit("Loginfail",response)
                        else{
                            $state.go('main.nuevos')
                        }

                    },
                    function(response) {
                        // swal(
                        //     'Oops...',
                        //     'Error de servidor',
                        //     'error'
                        // )
                        $rootScope.$emit("Loginfail",response)

                    });
        }
    }

    angular.module('proyecto')
        .controller('loginCtrl',['$http','$auth','$state', '$rootScope', loginCtrl]);

})();

/**
 * Created by guzman on 4/02/17.
 */


(function() {
    function registroCtrl($http){
        var vm = this;
        vm.registro = function(){
            var json = {
                usernameRegistro : vm.usernameModel,
                passwordRegistro : vm.passwordModel,
                emailRegistro : vm.emailModel
            };

            $http.post('/registerForm',json)
                .then(function(response){
                        //console.log("respuesta",response);
                        vm.status = "OK";
                    },
                    function(response) {
                        vm.status = "Fallo";
                        console.log("fallo")
                        swal(
                            'Oops...',
                            'Error al registrar!',
                            'error'
                        )
                    });

        }
    }

    angular.module('proyecto')
        .controller('registroCtrl',['$http',registroCtrl]);

})();
